# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: JIRA link
on:
  - pull_request
jobs:
  comment:
    name: Comment
    runs-on: ubuntu-latest
    steps:
      - name: Comment JIRA URL
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            function detectJIRAID(title) {
              if (!title) {
                return null;
              }
              const matched = /^ARROW-\d+/.exec(title);
              if (!matched) {
                return null;
              }
              return matched[0];
            }

            function commentJIRAURL(payload, jira_id) {
              const base_repo = payload.pull_request.base.repo;
              const jira_url =
                `https://issues.apache.org/jira/browse/${jira_id}`;
              github.issues.createComment({
                                            "owner": base_repo.owner.login,
                                            "repo": base_repo.name,
                                            "issue_number": payload.number,
                                            "body": jira_url
                                          });
            }

            const payload = context.payload;
            const current_jira_id = detectJIRAID(payload.pull_request.title);
            if (payload.action === "opened" && current_jira_id) {
              commentJIRAURL(payload, current_jira_id);
            } else if (payload.action === "edited" &&
                       current_jira_id &&
                       payload.changes.title &&
                       payload.changes.title.from) {
              const previous_jira_id = detectJIRAID(payload.changes.title.from);
              if (current_jira_id !== previous_jira_id) {
                commentJIRAURL(payload, current_jira_id);
              }
            }
